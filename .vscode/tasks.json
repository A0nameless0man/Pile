{
    // See https://go.microsoft.com/fwlink/?LinkId=733558 
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "ClangBuild",
            "command": "clang++",
            "args": [
                "-std=c++17",
                "-Werror",
                "-Wall",
                "-Wno-c++98-compat",
                "-Wno-c++98-compat-pedantic",
                "-Wno-newline-eof",
                "-O2",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe",
                "${file}"
            ],
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "type": "shell",
            "label": "GccBuild",
            "command": "g++",
            "args": [
                "${file}",
                "-O2",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}.exe",
                "-g",
                "-Wall",
                "-std=c++2a"
            ],
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "GccDebugBuild",
            "command": "g++",
            "args": [
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}.exe",
                "-g",
                "-Wall",
                "-std=c++2a",
                "-D DEBUG"
            ],
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "Run",
            "command": [
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "args": [],
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "Clean",
            "command": "rm",
            "windows": {
                "args": [
                    "${fileDirname}\\${fileBasenameNoExtension}.exe",
                    ",",
                    "${fileDirname}\\${fileBasenameNoExtension}.ilk",
                    ",",
                    "${fileDirname}\\${fileBasenameNoExtension}.pdb",
                    "|Out-Null"
                ]
            },
            "linux": {
                "args": [
                    "${fileDirname}\\${fileBasenameNoExtension}.exe"
                ]
            }
        },
        {
            "type": "shell",
            "label": "CleanRun",
            "dependsOrder": "sequence",
            "dependsOn": [
                "ClangBuild",
                "Run",
                "Clean"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "type": "shell",
            "label": "CompleteClean",
            "windows": {
                "command": "ls ${workspaceRoot} -r|%{if($_.name -match \\\"(\\.exe$)|(\\.ilk$)|(\\.pdb$)|(\\.pch$)|(\\.class$)\\\" -and $_.mode -notmatch \\\"d\\\"){echo $_.FullName;del $_.FullName}}"
            },
            "linux": {
                "command": "find ${workspaceRoot} -regextype posix-extended -regex '.*\\.(exe$|ilk$|pch$|pdb$|out$|class$)' |tee ./deletedFiles|xargs rm\ncat ./deletedFiles\nrm ./deletedFiles"
            },
            "problemMatcher": []
        },
        {
            "type": "shell",
            "label": "TScompile",
            "command": "tsc",
            "args": [
                "-p",
                "${fileDirname}\\..\\"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "TSrun",
            "command": "node",
            "args": [
                "${fileDirname}\\..\\dist\\${fileBasenameNoExtension}.js"
            ]
        },
        {
            "type": "shell",
            "label": "TStest",
            "dependsOrder": "sequence",
            "dependsOn": [
                "TScompile",
                "TSrun"
            ]
        }
    ]
}